version: '3.8'

services:
  # PostgreSQL Database (same as base)
  postgres:
    extends:
      file: docker-compose.yml
      service: postgres

  # Go API Service with Hot Reload
  api:
    build:
      context: ./savage-worlds-api
      dockerfile: Dockerfile.dev
    container_name: swvtt-api-dev
    restart: unless-stopped
    ports:
      - "${API_PORT:-8080}:8080"
    environment:
      # Server Configuration
      SERVER_PORT: 8080
      ENVIRONMENT: development

      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-swvtt_user}
      DB_PASSWORD: ${DB_PASSWORD:-swvtt_dev_password}
      DB_NAME: ${DB_NAME:-swvtt_db}
      DB_SSL_MODE: disable

      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET:-development_secret_key_change_in_production}
      JWT_ACCESS_EXPIRY: ${JWT_ACCESS_EXPIRY:-24h}
      JWT_REFRESH_EXPIRY: ${JWT_REFRESH_EXPIRY:-168h}

      # CORS Configuration
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:3000}

      # Development specific
      GO_ENV: development
    volumes:
      - ./savage-worlds-api:/app
      - go_modules:/go/pkg/mod
    working_dir: /app
    command: air -c .air.toml
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - swvtt-network

  # React Frontend with Hot Reload
  frontend:
    build:
      context: ./ui-web
      dockerfile: Dockerfile.dev
    container_name: swvtt-frontend-dev
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:8080/api/v1}
      REACT_APP_API_TIMEOUT: ${REACT_APP_API_TIMEOUT:-30000}
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
    volumes:
      - ./ui-web:/app
      - /app/node_modules
    command: npm start
    depends_on:
      - api
    networks:
      - swvtt-network

  # PgAdmin (same as base)
  pgadmin:
    extends:
      file: docker-compose.yml
      service: pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  go_modules:
    driver: local

networks:
  swvtt-network:
    driver: bridge
