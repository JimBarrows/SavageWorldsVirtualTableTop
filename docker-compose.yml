version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: swvtt-postgres
    restart: unless-stopped
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${DB_USER:-swvtt_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-swvtt_dev_password}
      POSTGRES_DB: ${DB_NAME:-swvtt_db}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/migrations:/migrations
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-swvtt_user} -d ${DB_NAME:-swvtt_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - swvtt-network

  # Go API Service
  api:
    build:
      context: ./savage-worlds-api
      dockerfile: Dockerfile
    container_name: swvtt-api
    restart: unless-stopped
    ports:
      - "${API_PORT:-8080}:8080"
    environment:
      # Server Configuration
      SERVER_PORT: 8080
      ENVIRONMENT: ${ENVIRONMENT:-development}
      
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-swvtt_user}
      DB_PASSWORD: ${DB_PASSWORD:-swvtt_dev_password}
      DB_NAME: ${DB_NAME:-swvtt_db}
      DB_SSL_MODE: disable
      
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET:-development_secret_key_change_in_production}
      JWT_ACCESS_EXPIRY: ${JWT_ACCESS_EXPIRY:-24h}
      JWT_REFRESH_EXPIRY: ${JWT_REFRESH_EXPIRY:-168h}
      
      # CORS Configuration
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:3000}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - swvtt-network

  # React Frontend
  frontend:
    build:
      context: ./ui-web
      dockerfile: Dockerfile
    container_name: swvtt-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:8080/api/v1}
      REACT_APP_API_TIMEOUT: ${REACT_APP_API_TIMEOUT:-30000}
      NODE_ENV: ${NODE_ENV:-development}
    depends_on:
      - api
    volumes:
      - ./ui-web:/app
      - /app/node_modules
    networks:
      - swvtt-network

  # PgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: swvtt-pgadmin
    restart: unless-stopped
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@swvtt.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin_password}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - swvtt-network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  swvtt-network:
    driver: bridge